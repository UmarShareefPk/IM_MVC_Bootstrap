@model Web.Models.Incident
@{
}
<link rel="stylesheet" href="~/css/imDetail.css">
<link href="~/datepicker/simplepicker.css" rel="stylesheet" />

<div class="container main-container">
    <!-- Page Title-->
    <div class="row">
        <div class="col col-sm-12">
            <h3 class="site-cl">Incident Details</h3>
        </div>
    </div>
    <br> <br>
    <!-------------------------------- Title ------------------------------------------>
         <div class="row section">
             <div class="col-md-8 col-sm-12" id="titleBox">
                 <h4 class="text-primary"> <span  id="title"> @Model.Title  </span> 
                    <i class="fas fa-edit text-primary" onclick="$('#titleBox').hide(); $('#titleEditBox').show();"></i>
                 </h4>
             </div>
             <div class="col-md-8 col-sm-12" id="titleEditBox" style="display:none;">
                 <p>
                     <input type="text" id="titleTxt" class="input-text w-100" value="@Model.Title" />
                     <div class="w-100 text-right fields-update-icon">
                         <i class="fas fa-times-circle text-warning" title="Cancel" onclick="$('#titleBox').show(); $('#titleEditBox').hide(); "></i>
                         <i class="fas fa-check text-success" title="Save" 
                            onclick="titleUpdate();">

                         </i>
                     </div>
                 </p>
             </div>

             <div class="col-md-4 col-sm-12">
                 <p class="text-muted timstamp" id="timestamp">Created by  5 hours ago </p>
             </div>
         </div>

    <!-- Fields and updates-->
         <div class="row section">
             <div class=" col-md-6  col-sm-12">
                 <!-------------------------------- Description ------------------------------------------>
                 <h6 class="text-primary">
                     Description :
                     <i class="fas fa-edit text-primary" onclick="$('#descriptionBox').hide(); $('#descriptionEditBox').show();"></i>
                 </h6>
                 <div class="field scrollbar" id="descriptionBox">
                     <p class="text-muted text-center" id="description">
                         @Model.Description
                     </p>
                 </div>
                 <div class="" id="descriptionEditBox" style="display:none;">
                     <textarea id="descriptionTxt" class="scrollbar" oninput="auto_grow(this)">
                       @Model.Description
                         </textarea>
                     <div class="w-100 text-right fields-update-icon">
                         <i class="fas fa-times-circle text-warning" title="Cancel" onclick="$('#descriptionEditBox').hide(); $('#descriptionBox').show();"></i>
                         <i class="fas fa-check text-success" onclick="descriptionUpdate();" title="Save"></i>
                     </div>

                 </div>
                 <!-------------------------------- Additonal Details ------------------------------------------>
                 <h6 class="text-primary">
                     Additional Details :
                     <i class="fas fa-edit text-primary" onclick="$('#additionalDetailsBox').hide(); $('#additionalDetailsEditBox').show();"></i>
                 </h6>
                 <div class="field scrollbar" id="additionalDetailsBox">
                     <p class="text-muted text-center" id="additionalDetails">
                         @Model.AdditionalData
                     </p>
                 </div>
                 <div class="" id="additionalDetailsEditBox" style="display:none;">
                     <textarea class="scrollbar" id="additionalDetailsTxt" oninput="auto_grow(this)">
                @Model.AdditionalData      
                </textarea>
                     <div class="w-100 text-right fields-update-icon">
                         <i class="fas fa-times-circle text-warning" title="Cancel" onclick="$('#additionalDetailsBox').show(); $('#additionalDetailsEditBox').hide();"></i>
                         <i class="fas fa-check text-success" title="Save" onclick="additionalDetailsUpdate();"></i>
                     </div>
                 </div>
                 <!-------------------------------- Attachments ------------------------------------------>
                 <h6 class="text-primary"> Attachments:</h6>
                 <table class="table">

                     @foreach (var file in Model.Attachments)
                     {
                         <tr>
                             <td id='file-@file.Id'>
                                 <i class="fas fa-times-circle  text-danger" onclick="deleteAttachment(false, '', '@file.FileName', '@file.Id');"></i>
                                 <a href="#" onclick="downloadFile(false, '', '@file.FileName', '@file.ContentType');"> @file.FileName </a>
                             </td>
                         </tr>
                     }

                 </table>

             </div>
             <!-------------------------------- Status, Assignee, and Dates ------------------------------------------>
             <div class=" col-md-5 offset-md-1 col-sm-12">
                 <table class="table update-section">
                     <tr>
                         <td><h6 class="text-primary">Status</h6></td>
                         <td>
                             <select class="browser-default  dropdown-custom" id="statusDdl" onchange="updateIncidentByField('Status', $(this).val());">
                                 <option value="N">New</option>
                                 <option value="I">In Progress</option>
                                 <option value="C">Closed</option>
                                 <option value="A">Approved</option>
                             </select>
                         </td>
                     </tr>
                     <tr>
                         <td><h6 class="text-primary">Assignee</h6></td>
                         <td>
                             <!-- Example single danger button -->
                             <div class="btn-group">
                                 <input type="text" id="assigneeDdl" value="" class="dropdown-toggle dropdown-custom" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" />

                                 <div class="dropdown-menu justify-content-center">
                                     <div class="dropdown-item">
                                         <input type="text" id="assigneeSearchtxt" placeholder="Search" class="input-text" />
                                     </div>
                                     <div id="assgineeHtml" class="assignee-list scrollbar">
                                     </div>
                                 </div>
                             </div>
                         </td>
                     </tr>
                     <tr>
                         <td>
                             <h6 class="text-primary">
                                 Start Date
                                 <i id="startDateEdit" class="fas fa-edit text-primary"></i>
                             </h6>
                         </td>
                         <td id="startDate">3 days ago</td>
                     </tr>
                     <tr>
                         <td>
                             <h6 class="text-primary">
                                 Due Date
                                 <i id="dueDateEdit" class="fas fa-edit text-primary"></i>
                             </h6>
                         </td>
                         <td id="dueDate">In 2 weeks</td>
                     </tr>

                 </table>
             </div>
         </div>

    <!------------------------------------------------- Comments ------------------------------->
    <div class="row section">
        <div class=" col-md-6 col-sm-12">

            <h4>Comments</h4>
            <br>
            @foreach (var comment in Model.Comments)
            {
                <div class='commentBox' id='commentBox-@comment.Id'>
                    <div class="commentHeader d-flex">
                        <div class="w-75">
                            <a class="text-primary userName">@comment.UserId</a>
                            added a comment. -
                            <span class="momentTime"> @comment.CreateDate</span>

                        </div>
                        <div class="w-25 d-flex justify-content-end">
                            <i class="fas fa-edit text-primary" onclick="$('#commentTxt-@comment.Id').hide(); $('#commentTxtEdit-@comment.Id').show();"></i>
                            <i class="fas fa-times-circle text-danger" onclick="deleteComment('@comment.Id')" title="Delete Comment"></i>
                        </div>
                    </div>
                    <p class="text-muted text-center field scrollbar" id="commentTxt-@comment.Id">
                        @comment.CommentText
                    </p>

                    <div class="" id="commentTxtEdit-@comment.Id" style="display:none;">
                        <textarea class="scrollbar">
                            @comment.CommentText
                        </textarea>
                        <div class="w-100 text-right fields-update-icon">
                            <i class="fas fa-times-circle text-warning" onclick="$('#commentTxt-@comment.Id').show(); $('#commentTxtEdit-@comment.Id').hide();" title="Cancel"></i>
                            <i class="fas fa-check text-success" onclick="updateComment('@comment.Id')" title="Save"></i>
                        </div>
                    </div>

                    <p>
                        <table class="">
                            @foreach (var file in comment.attachments)
                            {
                            <tr>
                                <td id='file-@file.Id'>
                                    <i class="fas fa-times-circle  text-danger" onclick="deleteAttachment(true, '@file.CommentId', '@file.FileName', '@file.Id');"></i>
                                    <a href="#" onclick="downloadFile(true, '@file.CommentId', '@file.FileName', '@file.ContentType');"> @file.FileName </a>
                                </td>
                            </tr>
                            }
                        </table>
                    </p>
                    <hr>
                </div>
            }


            <h5>Add Comment</h5>
            <div class="input-field">
                <textarea id="comment" placeholder="Type a comment here" oninput="auto_grow(this)" class=""></textarea>
            </div>
            <div class="custom-file upload-container">
                <button class="btn bg-primary text-white"><i class="fas fa-paperclip"></i></button>
                <input class="file" id="commentFiles" onchange="$('#filestxt').val($('#commentFiles')[0].files.length+ ' file selected.')" type="file" multiple />
                <input type="text" id="filestxt" class="txt w-75 text-muted" value="Upload Files" readonly>
            </div>

            <div class="comment-buttons text-center ">
                <button class="btn  text-white bg-success" onclick="addNewComment();">
                    <span>Add</span>
                    <i class="fas fa-check "></i>
                    </a>
                </button>

                <button class="btn bg-warning text-white">
                    <span>Cancel</span>
                    <i class="fas fa-times-circle  text-white"></i>
                    </a>
                </button>
            </div>
        </div>
    </div>

</div><!-- end of container-->

@section Scripts{

    <script src="~/datepicker/simplepicker.js"></script>
    <script>
///////////////////////////////////////////////////////// Setting fields ////////////////////////////////////////
        $(document).ready(function () {

            setTimestamp();
            $("#assigneeDdl").val(getUserNameById("@Model.AssignedTo")); // set assingee value
            $("#statusDdl").val('@Model.Status'); // set status
            $("#startDate").html("<span title='" + moment("@Model.StartTime").format("MMMM DD YYYY, h:mm:ss a") + "'>" + moment("@Model.StartTime").fromNow() + "</span>");
            $("#dueDate").html("<span title='" + moment("@Model.DueDate").format("MMMM DD YYYY, h:mm:ss a") + "'>" + moment("@Model.DueDate").fromNow() + "</span>");
            setAssigneeList("");  //set assignee list

            $(".momentTime").each(function () { // changing datetime to moment format. Set class momentTime to any element that as datatime raw value
                var date = $(this).html().trim();
                $(this).html(moment(date).fromNow());
                $(this).attr("title", moment(date).format("MMMM DD YYYY, h:mm:ss a"));
            });

            $(".userName").each(function () { // changing userIds to ([FirstName LastName] format)
                var userId = $(this).html().trim();
                $(this).html(getUserNameById(userId))
            });

            $("#assigneeSearchtxt").on("input", function (e) {
                let searchTxt = $("#assigneeSearchtxt").val();
                setAssigneeList(searchTxt);
            });
        });

        function setTimestamp() {
            let txt = "Created by ";
            txt += "<span class='text-primary'>" + getUserNameById("@Model.CreatedBy") + "</span>";
            txt += " - ";
            txt += "<span title='" + moment("@Model.CreatedAT").format("MMMM DD YYYY, h:mm:ss a") +"'>" + moment("@Model.CreatedAT").fromNow() + "</span>";
            $("#timestamp").html(txt);
        }

        function setAssigneeList(searchTxt) {
            let html = "";
            let assignees = getAssingeesBySearch(searchTxt);
            assignees.forEach((assignee) => {
                html += " <span class='dropdown-item text-primary'";
                html += "onclick =\"assigneeSelected('"+ assignee.Id +"')\">";
                html +=  assignee.FirstName + " " + assignee.LastName + "</span>";
            });
            $("#assgineeHtml").html(html);
        }

        function assigneeSelected(id) {
            $('#assigneeDdl').val(getUserNameById(id));
            updateIncidentByField("AssignedTo", id);
        }

        function downloadFile(isComment, commentId, fileName, contentType) {

            let url = "@ViewBag.baseUrl" + "api/Incidents/DownloadFile?"
               + "type=" + (isComment ? "comment" : "incident")
               + "&commentId=" + (isComment? commentId : "")
               + "&incidentId=" + "@Model.Id"
               + "&filename=" + fileName
               + "&contentType=" + contentType
            window.open(url);
        }

///////////////////////////////////////////////////////// Incident updates ////////////////////////////////////////
        function updateIncidentByField(field, value){
            let parameters = {
                IncidentId: "@Model.Id",
                Parameter: field,
                Value: value,
                UserId: "@ViewBag.userId"
            };

            axios.defaults.headers = { 'Authorization': `Bearer @ViewBag.token` };
            const url = "@ViewBag.baseUrl" + "api/Incidents/UpdateIncident";
            axios.post(url, parameters)
                .then((response) => {
                    sendUpdateToSignalR(parameters.IncidentId);
                })
                .catch((err) => {
                    console.log(err.message);
                });
        }

        function titleUpdate() {
            updateIncidentByField('Title', $('#titleTxt').val().trim());
            $('#title').html($('#titleTxt').val().trim());
            $('#titleBox').show();
            $('#titleEditBox').hide();
        }
        function descriptionUpdate() {
            updateIncidentByField('Description', $('#descriptionTxt').val().trim());
            $('#description').html($('#descriptionTxt').val().trim());
            $('#descriptionEditBox').hide();
            $('#descriptionBox').show();
        }
        function additionalDetailsUpdate() {
            updateIncidentByField('AdditionalData', $('#additionalDetailsTxt').val().trim().replaceAll("'" , "''"));
            $('#additionalDetails').html($('#additionalDetailsTxt').val().trim());
            $('#additionalDetailsEditBox').hide();
            $('#additionalDetailsBox').show();
        }

        function deleteAttachment(isComment, commentId, fileName, fileId) {
            if (window.confirm("Are you sure you want to delete this attachment." + fileName)) {

                  axios.defaults.headers = { 'Authorization': `Bearer @ViewBag.token` };
                const url = "@ViewBag.baseUrl" + "api/Incidents/DeleteFile?"
                    + "type="  + (isComment ? "comment" : "incident")
                    + "&commentId=" + (isComment ? commentId : "")
                    + "&incidentId=" + "@Model.Id"
                    + "&userId=" + "@ViewBag.userId"
                    + "&fileId=" + fileId
                    + "&filename=" + fileName
                   // + "&contentType=" + file.ContentType

                axios.get(url)
                    .then((response) => {
                        $("#file-" + fileId).remove();
                    })
                    .catch((err) => {
                        console.log(err.message);
                    });
            }
        }
////////////////////////////////////  Date Pickers /////////////////////////////////////////
        let datepicker = new SimplePicker({
            zIndex: 10
        });

        let isStartDate = false; // check where datepicker focus is

        $("#startDateEdit").click(function () {
            isStartDate = true;
            datepicker.open();
        });

        $("#dueDateEdit").click(function () {
            isStartDate = false;
            datepicker.open();
        });

        datepicker.on('submit', (date, readableDate) => {
            if (isStartDate) {
                $("#startDate").html("<span title='" + moment(date).format("MMMM DD YYYY, h:mm:ss a") + "'>" + moment(date).fromNow() + "</span>");
                updateIncidentByField("StartTime", date);
            }
            else {
                $("#dueDate").html("<span title='" + moment(date).format("MMMM DD YYYY, h:mm:ss a") + "'>" + moment(date).fromNow() + "</span>");
                updateIncidentByField("DueDate", date);
            }
        });

        datepicker.on('close', (date) => {
        });
//////////////////////////////////////////////  Comment Section ///////////////////////////////////////////////////////////////////

        function addNewComment() {
            let newComment = $("#comment").val().trim();
            let newCommentFiles = $('#commentFiles')[0].files;

            if (newComment.trim() === "") {
                alert("Please add comment first.");
                return;
            }

            const formData = new FormData();

            if (newCommentFiles) {
                for (let i = 0; i < newCommentFiles.length; i++) {
                    formData.append(
                        "Attachment" + i + 1,
                        newCommentFiles[i],
                        newCommentFiles[i].name
                    );
                }
            }
            formData.append("CommentText", newComment.trim());
            formData.append("IncidentId", '@Model.Id');
            formData.append("UserId", '@ViewBag.userId');

            axios.defaults.headers = { 'Authorization': `Bearer @ViewBag.token` };
            const url = "@ViewBag.baseUrl" + "api/Incidents/AddComment";
                axios.post(url, formData)
                    .then((response) => {
                        const comment = response.data;
                        sendUpdateToSignalR(comment.IncidentId);
                        window.location.reload(true);
                    })
                    .catch((err) => {
                        console.log(err.message);
                    });
        }

        function updateComment(commentId) {

            let comment = {
                Id: commentId,
                IncidentId: '@Model.Id',
                UserId: '@ViewBag.userId',
                CreateDate: new Date(),
                CommentText: $("#commentTxtEdit-" + commentId + " textarea").val(),
                attachments: []
            }
           
            axios.defaults.headers = { 'Authorization': `Bearer @ViewBag.token` };
            const url = "@ViewBag.baseUrl" + "api/Incidents/UpdateComment";
            axios.post(url, comment)
                .then((response) => {                   
                    $("#commentTxt-" + commentId).html(comment.CommentText);
                    $('#commentTxt-' + commentId).show();
                    $('#commentTxtEdit-' + commentId).hide();
                    sendUpdateToSignalR(comment.IncidentId);
                })
                .catch((err) => {
                    console.log(err.message);
                });

        }

        function deleteComment(commentId) {
            if (!window.confirm("Are you sure you want to delete this comment?")) {
                return;
            }

            axios.defaults.headers = { 'Authorization': `Bearer @ViewBag.token` };
            const url = "@ViewBag.baseUrl" + "api/Incidents/DeleteComment?"
                + "commentId=" + commentId
                + "&incidentId=" + '@Model.Id'
                + "&userId=" + '@ViewBag.userId'
            axios.get(url)
                .then((response) => {
                    console.log("comment delted :", response);
                    $("#commentBox-" + commentId).remove();
                    sendUpdateToSignalR(comment.IncidentId);
                })
                .catch((err) => {
                    console.log(err.message);
                    const data = "while delteing comment: " + err.message;
                });
         }


    </script>


}