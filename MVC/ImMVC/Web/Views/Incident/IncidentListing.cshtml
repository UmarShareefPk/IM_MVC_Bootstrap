@{
}
<link href="~/css/imListing.css" rel="stylesheet" />

<div class="row">
    <div class="col-sm-6">
        <h3 class="site-cl">Incident Listing</h3>
    </div>
    <div class="col-sm-6 text-right">
        <a href="./newIncident.html" class="btn text-white bg-success">Add New</a>
    </div>
</div>

<div class="row search-bar">
    <div class="col-sm-12">
        <span class="text-muted "> Search : </span>
        <input type="text" class="txt w-50 text-muted" placeholder="Type title or description" />
    </div>
</div>

<!-- Listing-->
<div class="row">
    <div class="col col-sm-12">
        <div class="table-responsive">
            <table class="table ">
                <thead>
                    <tr>
                        <th>Title </th>
                        <th>Description</th>
                        <th>Assigned TO</th>
                        <th>Created By</th>
                        <th>Created Date</th>
                        <th>Due Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody id="imListRows">
                </tbody>
            </table>
        </div>

        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-end" id="pageContainer">                
            </ul>
        </nav>
    </div>
</div>



@section Scripts{
    <script>
    $(document).ready(function () {
        localStorage.setItem("userlogin", JSON.stringify(@Html.Raw(ViewBag.userLogin)));
        loadIncidents();
     });

    function loadIncidents(pageSize = 7, pageNumber = 1, search = "", ) {
        axios.defaults.headers = { 'Authorization': `Bearer @ViewBag.token` };
        const url = "https://localhost:44310/" +
            "api/Incidents/GetIncidentsWithPage?PageSize=" + pageSize +
            "&PageNumber=" + pageNumber + "&SortBy=q&SortDirection=q&Search=" + search + "";         
            axios({
                method: 'GET',
                url: url
               // ,cancelToken: new axios.CancelToken(c => cancel = c)
            })
            .then((response) => {                             
                setIncidents(response.data.Incidents);
                setPages(parseInt(response.data.Total_Incidents), pageSize, pageNumber, search);
            })
            .catch((err) => {
                console.log(err.message);   
            });    
    } // end of loadIncidents

        function setIncidents(allIncidents) {
            let incidents = "";
            allIncidents.forEach((incident) => {
                incidents += "<tr>";
                incidents += "<td><a href='#'>" + incident.Title + " </a></td>";
                incidents += "   <td title='" + incident.Description + "'>  " + incident.Description.slice(0, 15) + "... </td>";
                incidents += "<td>" + incident.AssignedTo + "</td>";
                incidents += "<td>" + incident.CreatedBy + "</td>";
                incidents += "<td><span title=" + moment(incident.CreatedAT).format("MMMM DD YYYY, h:mm:ss a") + ">" + moment(incident.CreatedAT).fromNow() + "</span></td>";
                incidents += "<td><span title=" + moment(incident.DueDate).format("MMMM DD YYYY, h:mm:ss a") + ">" + moment(incident.DueDate).fromNow() + "</span></td>";
                incidents += "<td>" + incident.Status + "</td>";
                incidents += "</tr>";
            })
            $("#imListRows").html(incidents);
        }
        function setPages(totalRecords, pageSize, currentPage, search) {
            let pagesHtml = "";
            let noOfPages = Math.ceil(totalRecords / pageSize);
            if (totalRecords == 0)
                return;
            if (currentPage === 1)
                pagesHtml += "<li class='page-item'><span class='page-link'>Previous</span></li>";
            else               
                pagesHtml += "<li class='page-item' onclick=\"loadIncidents(" + pageSize + "," + (currentPage - 1) + ",'" + search + "');\"><a class='page-link' href='#'>Previous</a></li>";
                            
            for (let i = 1; i <= noOfPages; i++) {
                let isActive = i === currentPage ? "active" : "";
                pagesHtml += "<li class='page-item " + isActive + "' onclick=\"loadIncidents(" + pageSize + "," + i + ",'" + search + "');\"><a class='page-link' href='#'>" + i + "</a></li>";
            }

            if (currentPage === noOfPages)
                pagesHtml += "<li class='page-item'><span class='page-link'>Next</span></li>";
            else
                pagesHtml += "<li class='page-item' onclick=\"loadIncidents(" + pageSize + "," + (currentPage + 1) + ",'" + search + "');\"><a class='page-link' href='#'>Next</a></li>";
                

            $("#pageContainer").html(pagesHtml);
        }
    </script>
}